import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:image_picker/image_picker.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

// import 'package:get/get.dart';

// void _pickImageCamera() async {
//   final picker = ImagePicker();
//   final pickedImage = await picker.getImage(source: ImageSource.camera);
//   final pickedImageFile = File(pickedImage.path);
//   setState(({_pickedImage = pickedImageFile;}));
//   Navigator.pop(context);
// }

// void _pickImageGallery() async {
//   final picker = ImagePicker();
//   final pickedImage = await picker.getImage(source: ImageSource.gallery);
//   final pickedImageFile = File(pickedImage.path);
//   setState(({_pickedImage = pickedImageFile;}));
// }

// void setState(Set set) {
// }

// void _remove() {
//   setState(() {
//     _pickedImage = null;
//   }
//   )
// }
class Autogenerated {
  List<Data>? data;
  Meta? meta;

  Autogenerated({this.data, this.meta});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(new Data.fromJson(v));
      });
    }
    meta = json['meta'] != null ? new Meta.fromJson(json['meta']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    if (this.meta != null) {
      data['meta'] = this.meta!.toJson();
    }
    return data;
  }
}

class Data {
  int? id;
  Attributes? attributes;

  Data({this.id, this.attributes});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    attributes = json['attributes'] != null
        ? new Attributes.fromJson(json['attributes'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    if (this.attributes != null) {
      data['attributes'] = this.attributes!.toJson();
    }
    return data;
  }
}

class Attributes {
  String? name;
  int? phone;
  String? email;
  String? fingerprint;
  String? birth;
  String? password;
  String? createdAt;
  String? updatedAt;
  String? publishedAt;
  String? address;
  Votings? votings;
  Votings? createdVotings;

  Attributes(
      {this.name,
      this.phone,
      this.email,
      this.fingerprint,
      this.birth,
      this.password,
      this.createdAt,
      this.updatedAt,
      this.publishedAt,
      this.address,
      this.votings,
      this.createdVotings});

  Attributes.fromJson(Map<String, dynamic> json) {
    name = json['Name'];
    phone = json['Phone'];
    email = json['Email'];
    fingerprint = json['Fingerprint'];
    birth = json['Birth'];
    password = json['Password'];
    createdAt = json['createdAt'];
    updatedAt = json['updatedAt'];
    publishedAt = json['publishedAt'];
    address = json['Address'];
    votings =
        json['votings'] != null ? new Votings.fromJson(json['votings']) : null;
    createdVotings = json['created_Votings'] != null
        ? new Votings.fromJson(json['created_Votings'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['Name'] = this.name;
    data['Phone'] = this.phone;
    data['Email'] = this.email;
    data['Fingerprint'] = this.fingerprint;
    data['Birth'] = this.birth;
    data['Password'] = this.password;
    data['createdAt'] = this.createdAt;
    data['updatedAt'] = this.updatedAt;
    data['publishedAt'] = this.publishedAt;
    data['Address'] = this.address;
    if (this.votings != null) {
      data['votings'] = this.votings!.toJson();
    }
    if (this.createdVotings != null) {
      data['created_Votings'] = this.createdVotings!.toJson();
    }
    return data;
  }
}

class Votings {
  List<Data>? data;

  Votings({this.data});

  Votings.fromJson(Map<String, dynamic> json) {
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class AttributesVoting {
  String? startedDate;
  String? finishedDate;
  String? createdAt;
  String? updatedAt;
  String? publishedAt;
  String? nama;

  AttributesVoting(
      {this.startedDate,
      this.finishedDate,
      this.createdAt,
      this.updatedAt,
      this.publishedAt,
      this.nama});

  AttributesVoting.fromJson(Map<String, dynamic> json) {
    startedDate = json['started_date'];
    finishedDate = json['finished_date'];
    createdAt = json['createdAt'];
    updatedAt = json['updatedAt'];
    publishedAt = json['publishedAt'];
    nama = json['Nama'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['started_date'] = this.startedDate;
    data['finished_date'] = this.finishedDate;
    data['createdAt'] = this.createdAt;
    data['updatedAt'] = this.updatedAt;
    data['publishedAt'] = this.publishedAt;
    data['Nama'] = this.nama;
    return data;
  }
}

class Meta {
  Pagination? pagination;

  Meta({this.pagination});

  Meta.fromJson(Map<String, dynamic> json) {
    pagination = json['pagination'] != null
        ? new Pagination.fromJson(json['pagination'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.pagination != null) {
      data['pagination'] = this.pagination!.toJson();
    }
    return data;
  }
}

class Pagination {
  int? page;
  int? pageSize;
  int? pageCount;
  int? total;

  Pagination({this.page, this.pageSize, this.pageCount, this.total});

  Pagination.fromJson(Map<String, dynamic> json) {
    page = json['page'];
    pageSize = json['pageSize'];
    pageCount = json['pageCount'];
    total = json['total'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['page'] = this.page;
    data['pageSize'] = this.pageSize;
    data['pageCount'] = this.pageCount;
    data['total'] = this.total;
    return data;
  }
}

class Profile extends StatefulWidget {
  late final String id;
  Profile();
  // const Home({Key? key}) : super(key: key);

  @override
  _ProfileState createState() => _ProfileState();
}

class _ProfileState extends State<Profile> {
  var loading = true;
  @override
  void initState() {
    super.initState();

    login();
  }

  var namaController;
  var idController;
  var emailController;
  var alamatController;
  var birthController;
  var votingController;
  var createdVotingController;

  Future login() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? stringValue = prefs.getString('email');
    int? intValue = prefs.getInt('id');
    var jsonResponse = null;
    final response = await http.get(
      Uri.parse(
          "http://20.78.59.91/api/voters?filters[email][\$eqi]=${stringValue}&&populate=%2A"),
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
    );
    jsonResponse = (response.body);
    final test = Autogenerated.fromJson(json.decode(response.body));

    // var jsonValue = json.decode(jsonResponse['meta']);
    Map<Object, dynamic> user = jsonDecode(jsonResponse);
    // Map<Object, dynamic> user1 = jsonEncode(user['data'][0]);
    // print(user1['name']);

    if (user['data'].length == 0) {
      // ScaffoldMessenger.of(context).showSnackBar(SnackBar(
      //   content: const Text('Failed to Sign In'),
      //   duration: const Duration(seconds: 1),
      // ));
      print("login not success");
    } else {
      namaController = test.data![0].attributes?.name ?? 'null';
      idController = test.data![0].id ?? 'null';
      emailController = test.data![0].attributes?.email ?? 'null';
      alamatController = test.data![0].attributes?.address ?? 'null';
      birthController = test.data![0].attributes?.birth ?? 'null';
      votingController =
          test.data![0].attributes?.votings?.data?.length ?? 'null';
      createdVotingController =
          test.data![0].attributes?.createdVotings?.data?.length ?? 'null';
      print(votingController);
      print("login success");
      print(stringValue);
      print(intValue);
      // print(jsonResponse.data[0].nama);
      // Navigator.pushReplacementNamed(context, '/');
    }
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
        child: FutureBuilder(
            future: login(),
            builder: (BuildContext context, AsyncSnapshot<dynamic> snapshot) {
              if (snapshot.connectionState == ConnectionState.waiting) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else {
                return Scaffold(
                    backgroundColor: Color(0xFF05304B),
                    body: Container(
                        child: Container(
                            constraints: BoxConstraints(minHeight: 896),
                            padding: EdgeInsets.only(top: 15),
                            child: Column(
                              children: [
                                Padding(padding: EdgeInsets.only(top: 34)),
                                Center(
                                    child: Stack(children: [
                                  //Border behind image <!! DO NOT MEDDLE !!>
                                  Container(
                                      margin:
                                          EdgeInsets.symmetric(horizontal: 20),
                                      child: CircleAvatar(
                                        backgroundColor: Colors.white,
                                        radius: 150,
                                      )),
                                  //Display Picture <!! DO NOT MEDDLE WITH STYLING !!>
                                  Container(
                                      margin: EdgeInsets.symmetric(
                                          horizontal: 33, vertical: 13),
                                      child: CircleAvatar(
                                        radius: 137,
                                        backgroundImage: NetworkImage(
                                            "https://picsum.photos/500/500"),
                                      )),
                                  //Button for Profile Picture
                                  // Positioned(
                                  //   bottom: 5,
                                  //   right: 30,
                                  //   child: RawMaterialButton(
                                  //     elevation: 0,
                                  //     fillColor: Colors.white,
                                  //     child: Icon(
                                  //       Icons.add_a_photo,
                                  //       size: 40,
                                  //       color: Color(0xFFE4E4E4),
                                  //     ),
                                  //     padding: EdgeInsets.all(20.0),
                                  //     shape: CircleBorder(),
                                  //     onPressed: () {
                                  //       showDialog(
                                  //           context: context,
                                  //           builder: (BuildContext context) {
                                  //             return AlertDialog(
                                  //                 title: const Text(
                                  //                   "Choose option",
                                  //                   style: TextStyle(
                                  //                       color:
                                  //                           Color(0xFF5F5F5F),
                                  //                       fontSize: 24),
                                  //                 ),
                                  //                 content:
                                  //                     SingleChildScrollView(
                                  //                   child: ListBody(
                                  //                     children: [
                                  //                       //Camera
                                  //                       InkWell(
                                  //                         // onTap: _pickImageCamera,
                                  //                         child: Row(
                                  //                             children: const [
                                  //                               Padding(
                                  //                                   padding: EdgeInsets
                                  //                                       .fromLTRB(
                                  //                                           0,
                                  //                                           0,
                                  //                                           10,
                                  //                                           0),
                                  //                                   child: Icon(
                                  //                                     Icons
                                  //                                         .camera_alt,
                                  //                                     color: Color(
                                  //                                         0xFF5F5F5F),
                                  //                                     size: 30,
                                  //                                   )),
                                  //                               Text(
                                  //                                 "Camera",
                                  //                                 style: TextStyle(
                                  //                                     fontWeight:
                                  //                                         FontWeight
                                  //                                             .w500,
                                  //                                     fontSize:
                                  //                                         18,
                                  //                                     color: Color(
                                  //                                         0xFF5F5F5F)),
                                  //                               )
                                  //                             ]),
                                  //                       ),
                                  //                       Padding(
                                  //                           padding:
                                  //                               EdgeInsets.only(
                                  //                                   bottom:
                                  //                                       10)),
                                  //                       //Gallery
                                  //                       InkWell(
                                  //                         // onTap: _pickImageGallery,
                                  //                         child: Row(
                                  //                             children: const [
                                  //                               Padding(
                                  //                                   padding: EdgeInsets
                                  //                                       .fromLTRB(
                                  //                                           0,
                                  //                                           0,
                                  //                                           10,
                                  //                                           0),
                                  //                                   child: Icon(
                                  //                                       Icons
                                  //                                           .add_photo_alternate,
                                  //                                       color: Color(
                                  //                                           0xFF5F5F5F),
                                  //                                       size:
                                  //                                           30)),
                                  //                               Text(
                                  //                                 "Gallery",
                                  //                                 style: TextStyle(
                                  //                                     fontWeight:
                                  //                                         FontWeight
                                  //                                             .w500,
                                  //                                     fontSize:
                                  //                                         18,
                                  //                                     color: Color(
                                  //                                         0xFF5F5F5F)),
                                  //                               )
                                  //                             ]),
                                  //                       ),
                                  //                       Padding(
                                  //                           padding:
                                  //                               EdgeInsets.only(
                                  //                                   bottom:
                                  //                                       10)),
                                  //                       //Remove
                                  //                       InkWell(
                                  //                         // onTap: _remove,
                                  //                         child: Row(
                                  //                             children: const [
                                  //                               Padding(
                                  //                                   padding: EdgeInsets
                                  //                                       .fromLTRB(
                                  //                                           0,
                                  //                                           0,
                                  //                                           10,
                                  //                                           0),
                                  //                                   child: Icon(
                                  //                                     Icons
                                  //                                         .highlight_remove,
                                  //                                     color: Colors
                                  //                                         .red,
                                  //                                     size: 30,
                                  //                                   )),
                                  //                               Text(
                                  //                                 "Remove",
                                  //                                 style: TextStyle(
                                  //                                     fontWeight:
                                  //                                         FontWeight
                                  //                                             .w500,
                                  //                                     fontSize:
                                  //                                         18,
                                  //                                     color: Colors
                                  //                                         .red),
                                  //                               )
                                  //                             ]),
                                  //                       )
                                  //                     ],
                                  //                   ),
                                  //                 ));
                                  //           });
                                  //     },
                                  //   ),
                                  // )
                                ])),
                                Padding(padding: EdgeInsets.only(top: 30)),
                                //Display Name
                                Container(
                                  child: Text(
                                    namaController,
                                    style: TextStyle(
                                      fontWeight: FontWeight.w500,
                                      fontSize: 44,
                                      color: Colors.white,
                                    ),
                                  ),
                                ),
                                //ID Bisa dicopas
                                Padding(padding: EdgeInsets.only(top: 10)),
                                Container(
                                    child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    Text("ID : ${idController}",
                                        style: TextStyle(
                                            fontSize: 18, color: Colors.white)),
                                    MaterialButton(
                                        minWidth: 15,
                                        onPressed: () {
                                          Clipboard.setData(ClipboardData(
                                              text: "${idController}"));
                                        },
                                        child: Icon(
                                          Icons.content_copy,
                                          color: Colors.white,
                                        ))
                                  ],
                                )),
                                Padding(padding: EdgeInsets.only(top: 10)),
                                //Data email alamat sama tanggal lahir
                                Container(
                                  alignment: Alignment.center,
                                  child: ListBody(children: [
                                    //Email user
                                    Container(
                                      padding: EdgeInsets.only(bottom: 10),
                                      child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          children: [
                                            Padding(
                                                padding: EdgeInsets.fromLTRB(
                                                    0, 0, 10, 0),
                                                child: Icon(
                                                  Icons.email_outlined,
                                                  color: Colors.white,
                                                  size: 25,
                                                )),
                                            Text(
                                              emailController,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w500,
                                                  fontSize: 16,
                                                  color: Colors.white),
                                            )
                                          ]),
                                    ),
                                    //Adress
                                    Container(
                                      padding: EdgeInsets.only(bottom: 10),
                                      child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          children: [
                                            Padding(
                                                padding: EdgeInsets.fromLTRB(
                                                    0, 0, 10, 0),
                                                child: Icon(
                                                  Icons.place_outlined,
                                                  color: Colors.white,
                                                  size: 25,
                                                )),
                                            Text(
                                              alamatController,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w500,
                                                  fontSize: 16,
                                                  color: Colors.white),
                                            )
                                          ]),
                                    ),
                                    //Date of Birth
                                    Container(
                                      child: Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.center,
                                          children: [
                                            Padding(
                                                padding: EdgeInsets.fromLTRB(
                                                    0, 0, 10, 0),
                                                child: Icon(
                                                  Icons.calendar_month_outlined,
                                                  color: Colors.white,
                                                  size: 25,
                                                )),
                                            Text(
                                              birthController,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w500,
                                                  fontSize: 16,
                                                  color: Colors.white),
                                            )
                                          ]),
                                    )
                                  ]),
                                ),
                                Padding(padding: EdgeInsets.only(bottom: 20)),
                                //Bottom Bar jml boting n jml suara
                                Container(
                                  child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        //Jumlah Voting Diikuti
                                        Container(
                                          height: 100,
                                          width: 196,
                                          decoration: BoxDecoration(
                                              color: Colors.white),
                                          child: Row(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                Expanded(
                                                    flex: 7,
                                                    child: Padding(
                                                        padding:
                                                            EdgeInsets.only(
                                                                left: 15),
                                                        child: Text(
                                                          "Jumlah voting\nyang sudah diikuti",
                                                          style: TextStyle(
                                                              color: Color(
                                                                  0xFF5F5F5F),
                                                              fontSize: 14),
                                                        ))),
                                                Expanded(
                                                    flex: 3,
                                                    child: Padding(
                                                        padding:
                                                            EdgeInsets.only(
                                                                left: 15),
                                                        child: Text(
                                                          votingController
                                                              .toString(),
                                                          style: TextStyle(
                                                              color: Color(
                                                                  0xFF5F5F5F),
                                                              fontSize: 24),
                                                        ))),
                                              ]),
                                        ),
                                        //Jumlah Voting Dibuat
                                        Container(
                                          height: 100,
                                          width: 196,
                                          decoration: BoxDecoration(
                                              color: Colors.white),
                                          child: Row(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                Expanded(
                                                    flex: 7,
                                                    child: Padding(
                                                        padding:
                                                            EdgeInsets.only(
                                                                left: 15),
                                                        child: Text(
                                                          "Jumlah voting\nyang sudah dibuat",
                                                          style: TextStyle(
                                                              color: Color(
                                                                  0xFF5F5F5F),
                                                              fontSize: 14),
                                                        ))),
                                                Expanded(
                                                    flex: 3,
                                                    child: Padding(
                                                        padding:
                                                            EdgeInsets.only(
                                                                left: 15),
                                                        child: Text(
                                                          createdVotingController
                                                              .toString(),
                                                          style: TextStyle(
                                                              color: Color(
                                                                  0xFF5F5F5F),
                                                              fontSize: 24),
                                                        ))),
                                              ]),
                                        ),
                                      ]),
                                )
                              ],
                            ))));
                //BATAS
              }
            }));
  }
}
